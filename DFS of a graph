Input: V = 5 , adj = [[2,3,1] , [0], [0,4], [0], [2]]

Output: 0 2 4 3 1
Explanation: 
0 is connected to 2, 3, 1.
1 is connected to 0.
2 is connected to 0 and 4.
3 is connected to 0.
4 is connected to 2.
so starting from 0, it will go to 2 then 4,
and then 3 and 1.
Thus dfs will be 0 2 4 3 1.

CODE:

void dfs( vector<int>adj[], vector<int>&vis, vector<int>&ans,int start){
      ans.push_back(start);
      vis[start]=1;
      for(auto i: adj[start]){
          if(vis[i]==0){
              dfs(adj,vis,ans,i);
          }
      }
  }
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
       vector<int>vis(V,0);
       vector<int>ans;
       dfs(adj,vis,ans,0);
       return ans;
    }
